<?xml version="1.0" encoding="UTF-8"?>
<beans xmlns="http://www.springframework.org/schema/beans"
       xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
       xmlns:context="http://www.springframework.org/schema/context" xmlns:p="http://www.springframework.org/schema/p"
       xsi:schemaLocation="http://www.springframework.org/schema/beans
       http://www.springframework.org/schema/beans/spring-beans.xsd http://www.springframework.org/schema/context https://www.springframework.org/schema/context/spring-context.xsd">

    <!-- 어느테이션 기반 bean 설정 -->
    <context:component-scan base-package="seunghee.spring.mvc._01_21_01_Member4"/>

    <!-- 표준 JDBC API - 소규모 -->

    <!-- DBCP API - 대규모 -->
    <bean id="dbcpDataSource" class="org.apache.commons.dbcp2.BasicDataSource"
          p:driverClassName="org.mariadb.jdbc.Driver"
          p:url="jdbc:mariadb://maria-db.coqecfviusin.ap-northeast-2.rds.amazonaws.com:3306/spring4"
          p:username="spring4"
          p:password="spring42020"/>
    <!-- 반복되는 property 코드를 생략하는 방법 -->

    <!-- JNDI API - 분산환경 -->
    <!-- myBatis3 설정#1 -->
    <bean id="sqlSessionFactory" class="org.mybatis.spring.SqlSessionFactoryBean"
          p:dataSource-ref="dbcpDataSource"
          p:mapperLocations="classpath:mybatis3/01_21_01_Member4Mapper.xml"/>

    <!-- myBatis3 설정#2 -->
    <bean id="sqlSession" class="org.mybatis.spring.SqlSessionTemplate">
        <constructor-arg ref="sqlSessionFactory" index="0"/>
    </bean>

    <!-- 스프링 JDBC template 정의 -->
    <bean id="jdbcTemplate"
          class="org.springframework.jdbc.core.JdbcTemplate">
        <property name="dataSource" ref="dbcpDataSource"/>
        <!-- ref 는 bean 에서 선언한 id 를 가져다 쓴다.  -->
    </bean>
</beans>